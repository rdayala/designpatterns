
https://dzone.com/articles/java-singletons-using-enum

https://github.com/dulajra/all-about-singletons

Singleton pattern restricts the instantiation of a class and ensures that 
only one instance of the class exists in the java virtual machine.

The singleton class must provide a global access point to get the instance of the class. 

Singleton pattern is used for logging, driver objects, caching and thread pool. 

Singleton design pattern is used in core java classes also, for example java.lang.Runtime, java.awt.Desktop. 

Implementation :

To implement Singleton pattern, we have different approaches but all of them have following common concepts.
	1. Private constructor to restrict instantiation of the class from other classes.
	2. Private static variable of the same class that is the only instance of the class.
	3. Public static method that returns the instance of the class, this is the global access point 
	for outer world to get the instance of the singleton class.